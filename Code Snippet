from qiskit import QuantumCircuit, execute, Aer
from qiskit.ml.datasets import ad_hoc_data
from qiskit.aqua.utils import split_dataset_to_data_and_labels, map_label_to_class_name

# Load and split the dataset
feature_dim = 2
training_dataset_size = 20
testing_dataset_size = 10
random_seed = 10598
shots = 10000

sample_Total, training_input, test_input, class_labels = ad_hoc_data(
    training_size=training_dataset_size, 
    test_size=testing_dataset_size, 
    n=feature_dim, gap=0.3, plot_data=True
)

datapoints, class_to_label = split_dataset_to_data_and_labels(test_input)
print(class_to_label)

# Create a quantum circuit
qc = QuantumCircuit(2)

# Apply Hadamard gates
qc.h([0,1])

# Run the quantum circuit on a statevector simulator backend
backend = Aer.get_backend('statevector_simulator')
job = execute(qc, backend)
result = job.result()

# Get the statevector
outputstate = result.get_statevector(qc, decimals=3)
print(outputstate)
